<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book
	[
	<!ENTITY % entities SYSTEM "catalog.ent">
	<!ENTITY % local.common.attrib "infoid CDATA #IMPLIED">
	<!ATTLIST bookinfo code CDATA #REQUIRED>
	%entities;
	<!ENTITY % xinclude SYSTEM "xinclude.mod">
	]>
	
<book id="ana_training%book">
		
<bookinfo code='ana_training'><title>The Anatomist tutorial</title>
        <!--<author> <firstname>DENGHIEN</firstname> <surname>Isabelle</surname></author> <date>06/2004</date>-->
        
</bookinfo>
	
<chapter><title>Foreward</title>

&disclaimer_en;

  <para>Few words and acknowledgements to those who allowed us to use their data: Gwenaelle Douaud, Lucie Hertz-Pannier ...    </para>
  <para>In order to work through the following sections, please download the demonstration data from one of the following links:
  <itemizedlist>
          <listitem><ulink url="ftp://ftp.cea.fr/pub/dsv/anatomist/data/demo_data.zip">ftp://ftp.cea.fr/pub/dsv/anatomist/data/demo_data.zip</ulink></listitem>
          <listitem>Section <emphasis>Exemple data</emphasis> from <ulink url="http://brainvisa.info/downloadpage.html">http://brainvisa.info/downloadpage.html</ulink></listitem>
  </itemizedlist>
  </para>
  <para>For more information concerning the installation, please refer to <ulink url="#bv_man%book"> the handbook of BrainVISA</ulink>.</para>

</chapter>
		
		
		
<chapter><title>Introduction to Anatomist</title>
        <para>Description of Anatomist features:</para>
        <itemizedlist>
                <listitem><para>Handling different objects<!-- Handling many kinds of objects-->: 3D volume, 4D volume sulcus, ROI, ...</para></listitem>
                <listitem><para>Handling different coordinate systems and transformations, for instance, you can load transformation matrix to change the object coordinate systems.</para></listitem>
                <listitem><para>Building/assembling/fusioning or superimposing objects in arbitrary number of views.</para></listitem>
                <listitem><para>Toolboxes: ROI, mathematic morphology, manual registration ...</para></listitem>
        </itemizedlist> 
        <figure><title>Anatomist control window</title>
          <mediaobject>
            <imageobject role="fop"><imagedata fileref="&DIR_IMG;control_window0.png" format="PNG"  width="350"/></imageobject>
            <imageobject role="html"><imagedata fileref="&DIR_IMG;control_window0.png" format="PNG"/></imageobject>
          </mediaobject>
        </figure>
        <para>See <ulink url='#ana_man%book'>the manual</ulink>.</para>
</chapter>
		
		
		
		
<chapter><title>Basic level</title>
			
  <sect1><title>Anatomist settings</title>
          <para>In order to change the preferences:</para>
          <itemizedlist>
                  <listitem><para><emphasis>Settings =&gt; Preferences</emphasis>.</para></listitem>
                  <listitem><para>Change what you need: display the linked cursor, display convention ...</para></listitem>
                  <listitem><para>Save modifications for the next sessions in <emphasis>File =&gt; Save global settings</emphasis>.</para></listitem>
          </itemizedlist>
  </sect1>
  
  <sect1 id="ana_training%load_object"><title>Load an object</title>
          <itemizedlist>
                  <listitem><para><emphasis>File =&gt; Open</emphasis>.</para></listitem>
                  <listitem><para>Select your object with the file browser, for instance: </para>
                          <para><filename>&data_ana;subject01/subject01.nii</filename> .</para></listitem>
                  <listitem><para>This object appears in the left list of the control window.</para></listitem>
          </itemizedlist>
          <para>See <ulink url="#ana_training%load_object_code">corresponding python script</ulink>.</para>
  </sect1>
			
  <sect1 id="ana_training%view_object"><title>View an object</title>
          <itemizedlist>
            <listitem><para>Load <filename>&data_ana;subject01/subject01.nii</filename> .</para></listitem>
            <listitem><para>Open an axial window by clicking on &window-axial-small;.</para></listitem>
            <listitem><para>Put the object (the volume) into this window: drag and drop this object into the window.</para></listitem>
          </itemizedlist>
          <figure><title>View of a T1 MRI in an axial window.</title>
                  <mediaobject>
                          <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_exo_handle-1.png" format="PNG"  width="100"/></imageobject>
                          <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_exo_handle-1.png" format="PNG"/></imageobject>
                  </mediaobject>
          </figure>
          <itemizedlist>
            <listitem><para>Open other types of windows (sagittal, coronal)</para></listitem>
            <listitem><para>Put the object into these windows by selecting the object and the windows and clicking on &window-add;.</para></listitem>
            <listitem><para>Click in one window. Notice that the cursor moves also in the other windows.</para></listitem>
            <listitem><para>It is possible to open several views using the menu <emphasis>Windows -&gt; Open 3D standard views</emphasis> or <emphasis>Open a 4 views block</emphasis>. 
            A block is a window that can contain several views. To add a window in a block, drag and drop the window item from Anatomist's list of windows to the block. To remove it, use the window menu <emphasis>Window => Detach window</emphasis></para></listitem>
          </itemizedlist>
          <figure><title>4 views block</title>
                  <mediaobject>
                          <imageobject role="fop"><imagedata fileref="&DIR_IMG;windows_block.png" format="PNG"  width="400"/></imageobject>
                          <imageobject role="html"><imagedata fileref="&DIR_IMG;windows_block.png" format="PNG"/></imageobject>
                  </mediaobject>
          </figure>
          
          <para>See <ulink url="#ana_training%view_object_code">corresponding python script</ulink>.</para>
  </sect1>
						
  <sect1 id='ana_training%zoom_trans_rotation' infoid='Zoom, translation and rotation of a volume'><title>Zoom, translation and rotation of a volume</title>
    <itemizedlist>
      <listitem><para>Load any volume.</para></listitem>
      <listitem><para>Place your cursor on &fb_trackball; to get information about shorcuts for zoom, rotations, etc.</para></listitem>
      <listitem><para>For example, try to do a rotation: click on the middle button and move simultaneously on the mouse.</para></listitem>
    </itemizedlist>
    <para>See <ulink url="#ana_training%zoom_trans_rotation_code">corresponding python script</ulink>.</para>
  </sect1>   

  <sect1 id='ana_training%reader_header' infoid='Read header information (voxel size, dimension image ...)'><title>Read header information (voxel_size, dimension image ...)</title>
          <itemizedlist>
            <listitem><para>Load <filename>&data_ana;subject01/subject01.nii</filename> .</para></listitem>
                  <listitem><para>Drag and drop on &window-browser-small;.</para></listitem>
                  <listitem><para>Unroll the tree and read the information.</para></listitem>
          </itemizedlist>
          <figure><title>Read header information.</title>
                  <mediaobject>
                          <imageobject role="fop"><imagedata fileref="&DIR_IMG;read_header.png" format="PNG"  width="300"/></imageobject>
                          <imageobject role="html"><imagedata fileref="&DIR_IMG;read_header.png" format="PNG" /></imageobject>
                  </mediaobject>
          </figure>
          <para>See <ulink url="#ana_training%reader_header_code">corresponding python script</ulink>.</para>
  </sect1>
		
  <sect1 id='ana_training%change_palette' infoid='change the color palette of an object'><title>Modification of color palette</title>
    <itemizedlist>
      <listitem><para>Load and visualize a volume.</para></listitem>
      <listitem><para>Right-click on this object and choose <emphasis>Color =&gt; Palette</emphasis>.</para></listitem>
      <listitem><para>Change the palette by selecting of a new palette in the bottom left list.</para></listitem>
      <listitem><para>Try to change the values of <emphasis>1st dimension settings</emphasis> and see the effects on the volume display.</para></listitem>
    </itemizedlist>
    <figure><title>Color Palette</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_palette.png" format="PNG"  width="300"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_palette.png" format="PNG" /></imageobject>
      </mediaobject>
    </figure>
    <para>See <ulink url="#ana_training%change_palette_code">corresponding python script</ulink>.</para>
    <sect2><title>Gradient Palette</title>
    <para>If you want to create a custom palette, you can use the Gradient palette module.</para>
    <itemizedlist>
      <listitem><para>Right-click on the object and choose <emphasis>Color =&gt; gradient palette</emphasis>.</para></listitem>
      <listitem><para>Change the palette by modifying the curves of the red, green and blue component.</para></listitem>
      <listitem><para>Save the palette image in $HOME/.anatomist/rgb. It will be available in the list of palettes the next time you run anatomist and you will be able to modify it later by choosing this palette in the list and opening again the gradient palette module.</para></listitem>
    </itemizedlist>
    <figure><title>Gradient Palette</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_gradient_palette.png" format="PNG"  width="250"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_gradient_palette.png" format="PNG" /></imageobject>
      </mediaobject>
    </figure>
  </sect2>
  </sect1>
			
  <sect1 id="ana_training%view_meshes"><title>View meshes</title>
          <itemizedlist>
                  <listitem><para>Load: 
                                  <itemizedlist>
                                          <listitem><filename>&data_ana;subject01/subject01_Lwhite.mesh</filename></listitem>
                                          <listitem><filename>&data_ana;subject01/subject01_Rwhite.mesh</filename></listitem>
                                  </itemizedlist>
                          </para></listitem>
                  <listitem><para>Open a 3D window by clicking on &window-3d-small;.</para></listitem>
                  <listitem><para>Put the objects into this window: drag and drop them into the 3d window.</para></listitem>
          </itemizedlist>
          <figure><title>View of white matter meshes in 3D window.</title>
                  <mediaobject>
                          <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_exo_handle-2.png" format="PNG"  width="120"/></imageobject>
                          <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_exo_handle-2.png" format="PNG"/></imageobject>
                  </mediaobject>
          </figure>
          <para>See <ulink url="#ana_training%view_meshes_code">corresponding python script</ulink>.</para>
  </sect1>
						
  <sect1 id='ana_training%superimpose'><title>Superimposing objects</title>
      <para>You can have several objects of different types in the same view. Lets superimpose a T1 MRI and the white matter meshes.</para>
          <itemizedlist>
                  <listitem><para>Load:
                                  <itemizedlist>
                                          <listitem>T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename></listitem>
                                          <listitem>Right white matter mesh: <filename>&data_ana;subject01/subject01_Rwhite.mesh</filename></listitem>
                                          <listitem>Left white matter mesh: <filename>&data_ana;subject01/subject01_Lwhite.mesh</filename></listitem>
                                  </itemizedlist>
                          </para></listitem>
                  <listitem><para>Open a 3D window by clicking on &window-3d-small;.</para></listitem>
                  <listitem><para>Drag and drop the 3 objects into the 3D window.</para></listitem>
                  <listitem><para>You can see the meshes but the T1 MRI is "hidden":</para>
                          <mediaobject>
                                  <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_exo_handle-3.png" format="PNG"  width="120"/></imageobject>
                                  <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_exo_handle-3.png" format="PNG"/></imageobject>
                          </mediaobject></listitem>
                  <listitem><para>To view it, use the middle button of your mouse to rotate the objects of this window, and now:</para>
                          <mediaobject>
                                  <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_exo_handle-4.png" format="PNG"  width="120"/></imageobject>
                                  <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_exo_handle-4.png" format="PNG"/></imageobject>
                          </mediaobject>
                  </listitem>
          </itemizedlist> 
          <para>See <ulink url="#ana_training%superimpose_code">corresponding python script</ulink>.</para>
  </sect1>
			
  <sect1 id='ana_training%change_opacity_mesh' infoid='change the opacity of mesh'><title>Change the mesh material</title>
    <para>The color and opacity of a mesh can be changed using the right-click menu <emphasis>Color =&gt; Material</emphasis>.</para>
    <itemizedlist>
      <listitem><para>Load <filename>&data_ana;subject01/subject01_head.mesh</filename></para></listitem>
      <listitem><para>Add it to the previous 3D window.</para></listitem>
      <listitem><para>Right-click on <filename>subject01_head.mesh</filename> object and choose <emphasis>Color =&gt; Material</emphasis>.</para></listitem>
      <listitem><para>Change the opacity value.</para></listitem>
      <listitem><para>Change its color using the cursor red, green and blue</para></listitem>
    </itemizedlist>
    <figure><title>Change the mesh material.</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_changeopacity.png" format="PNG"  width="250"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_changeopacity.png" format="PNG" /></imageobject>
      </mediaobject>
    </figure>
    <para>See <ulink url="#ana_training%change_opacity_mesh_code">corresponding python script</ulink>.</para>
  </sect1>  
			
  <sect1 id='ana_training%make_fusion' inofid='Fusion between 2 volumes'><title>Fusion between 2 volumes</title>  
    
    <para>KEYWORDS: Fusion2DMethod.</para>
    
    <itemizedlist>
      <listitem><para>Load 
          <itemizedlist>
            <listitem>Brain mask: <filename>&data_ana;subject01/brain_subject01.nii</filename></listitem>
            <listitem>T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename></listitem>
          </itemizedlist>
        </para></listitem>
      <listitem><para>Put the 2 objects in the same window. What do you see ?</para></listitem>
      <listitem><para>Superimposing does not work here, we have to create a new object that mixes the 2 volumes.</para></listitem>
      <listitem><para>Select the 2 objects in the object list using <emphasis role="bold">Ctrl + left buton </emphasis>.</para></listitem>
      <listitem><para>Clik on the fusion button &fusion;.</para></listitem>
      <listitem><para>A new window is diplayed which allows to select some fusion parameters. Click just on <emphasis>Ok</emphasis> to create the fusion object:
          <figure><title>Fusion window.</title>
            <mediaobject>
              <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion1.png" format="PNG"  width="80"/></imageobject>
              <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion1.png" format="PNG" /></imageobject>
            </mediaobject>
          </figure></para></listitem>
      <listitem><para>Place this new object in a window.</para></listitem>
      <listitem><para>By default, all volumes have the same color palette. So we will need <link linkend='ana_training%change_palette'>to change</link> this for one of the two volumes to help differentiate them. For instance, choose the <emphasis>GREEN-ufusion</emphasis> palette for the brain mask.</para></listitem>
      <listitem><para>It is possible to change the parameters of the fusion by right-clicking on the fusion object (Fusion2D) and select <emphasis>Fusion => Control 2D fusion</emphasis>.</para></listitem>
      <listitem><para>Set the <emphasis>mapping mode</emphasis> to <emphasis>Linear</emphasis> or <emphasis>Linear on non-nul</emphasis>.</para></listitem>
      <listitem><para>You can change the <emphasis>mixing rate</emphasis> between objects to see more one or the other.</para></listitem>
    </itemizedlist>    
    <figure><title>Fusion volume/volume.</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_volume_volume.png" format="PNG"  width="250"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_volume_volume.png" format="PNG" /></imageobject>
      </mediaobject>
    </figure>
    <para>See <ulink url="#ana_training%make_fusion_code">corresponding python script</ulink>.</para>
  </sect1>
</chapter>
                      
<chapter><title>Handling referentials and transformations</title>
  <para>In the previous examples, data came from one subject and one modality, so all images were in the same referential. With data from different subjects and modalities, it is more complicated, we have to take care about the different referentials. See <ulink url="#ana_man%load_and_display_objects">Anatomist manual</ulink> for details about referentials management.</para>
  
  <!-- Loading trm files - Different subjects -->
  <sect1 id='ana_training%load_transformation' infoid='load a transformation'><title>Load a transformation</title>
    <para><emphasis role='bold'>Visualization of the anatomical MRI of 2 subjects in a common referential (Talairach AC/PC-Anatomist)</emphasis></para>
    <itemizedlist>
      <listitem><para>Load 
          <itemizedlist>
            <listitem>subject01 T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename></listitem>
            <listitem>subject02 T1 MRI: <filename>&data_ana;subject02/subject02.ima</filename></listitem>
          </itemizedlist>
        </para></listitem>
      <listitem><para><link linkend='ana_training%make_fusion'>Fusion the 2 images</link>. Notice that they are not well superimposed because they are not in the same referential.</para></listitem>
    </itemizedlist>
      <figure><title>Fusion between anatomical MRI of 2 subjects</title>
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_2_subjects.png" format="PNG"  width="100"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_2_subjects.png" format="PNG" /></imageobject>
        </mediaobject>
      </figure>
      <itemizedlist>
      <listitem><para>Right-click on each image then <emphasis>Referential =&gt; Load =&gt; New</emphasis>.</para></listitem>
      <listitem><para>Open the referentials window: <emphasis>Windows =&gt; Referential windows</emphasis>.</para></listitem>
      <listitem><para>Draw a line with the mouse from the referential of subject01 to the red referential named Talairach AC/PC-Anatomist and choose the tranformation file: <filename>&data_ana;subject01/RawT1-subject01_default_acquisition_TO_Talairach-ACPC.trm</filename></para></listitem>
      <listitem><para>Draw a line with the mouse from the referential of subject02 to the red referential named Talairach AC/PC-Anatomist and choose the tranformation file: <filename>&data_ana;subject02/RawT1-subject02_200810_TO_Talairach-ACPC.trm</filename></para></listitem>
      <listitem><para>Return to the window that displays the fusion and click on the menu Scene =&gt; Focus view on objects.</para></listitem>
      <listitem><para>Now, the display of the 2 images must be consistent.</para></listitem>
    </itemizedlist>
    <figure><title>Anatomical MRI of 2 subjects in a common referential</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_2_subjects_talairach.png" format="PNG"  width="200"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_2_subjects_talairach.png" format="PNG" /></imageobject>
      </mediaobject>
    </figure>
    <para>See <ulink url="#ana_training%load_transformation_code">corresponding python script</ulink>.</para>
  </sect1>
  <sect1 id='ana_training%load_existent_referential' infoid='Load an existent referential to an object'><title>Load an existent referential</title>
    <para>You can set an existing referential to an object when several objects are in the same "real world". For example, a mesh created from a T1 MRI is in the same referential as the MRI.
    </para>
    <itemizedlist>
      <listitem><para>Load subject01 white mesh: <filename>&data_ana;subject01/subject01_Lwhite.mesh</filename>.</para></listitem>
      <listitem><para>Put it in the previous window containing the fusion between the MRI of the 2 subjects. Notice that it is not displayed at the same place as the MRIs.</para></listitem>
    </itemizedlist>
      <figure><title>Before loading referential</title>
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;apply_referential1.png" format="PNG"  width="100"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;apply_referential1.png" format="PNG" /></imageobject>
        </mediaobject>
      </figure>
      <itemizedlist>
      <listitem><para>Apply the referential of subject01.nii to this mesh with right-click menu <emphasis>Referential =&gt; Load</emphasis>.</para></listitem>
      <listitem>Now, the display is correct.</listitem>
    </itemizedlist>
    <figure><title>After loading referential</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;apply_referential2.png" format="PNG"  width="100"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;apply_referential2.png" format="PNG" /></imageobject>
      </mediaobject>
    </figure>
    <para>See <ulink url="#ana_training%load_existent_referential_code">corresponding python script</ulink>.</para>
  </sect1>

  <sect1 id='ana_training%apply_builtin_ref' infoid='Apply builtin referential (SPM/NIFTI)'><title><inlinemediaobject> <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_map_anat_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_map_anat_little.png" format="PNG"  /></imageobject></inlinemediaobject>Apply builtin referential (SPM/Nifti)</title>
    <para>The option <emphasis>Referential =&gt; Apply builtin referential (SPM/NIFTI)</emphasis> extract information about referentials and transformations that is stored in the image files. Indeed, some formats like Analyze and Nifti enable to store this kind of information. Theses transformations are not applied automatically by anatomist by default, but it is possible to change that in <emphasis>Settings =&gt; Preferences =&gt; Volume</emphasis>.</para>
    
    <!-- Apply SPM/Nifti transformations - Differents modalities -->
    <para><emphasis role='bold'>Fusion between an anatomical volume and an activation map</emphasis></para>
    <itemizedlist>
      <listitem><para>Load:
          <itemizedlist>
            <listitem>T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename> </listitem>
            <listitem>Activation map: <filename>&data_ana;subject01/Audio-Video_T_map.nii</filename></listitem>
          </itemizedlist>
        </para></listitem>
      <listitem><para><link linkend='ana_training%make_fusion'>Fusion the 2 images</link>.Not that they are not well superimposed because they are not in the same referential. But they are in Nifti format and contains information about a transformation to the referential <emphasis>Talairach-MNI Template-SPM</emphasis>.</para></listitem>
      <listitem><para>For each volume, right-click the <emphasis>Referential =&gt; Apply builtin referential (SPM/Nifti).</emphasis> </para></listitem>
      <listitem><para>Look at the fusion, the 2 images are now well superimposed.</para></listitem>
      <listitem><para>Change the point of view by changing the referential of the window: click on the colored bar at the top of the window and choose <emphasis>Talairach-MNI Template-SPM</emphasis>. Notice the change of orientation.</para></listitem>
    </itemizedlist>
    <figure><title>Fusion between an activation map and a T1 MRI</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_map_anat_1.png" format="PNG"  width="100"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_map_anat_1.png" format="PNG"/></imageobject></mediaobject>
    </figure>
    <para><emphasis role='bold'>Note about SPM2</emphasis>: it can use a .mat file to store the origin information, so the information in the regular Analyze header is not always reliable. Anatomist cannot read .mat (matlab) files, but .trm files. To <ulink url='#bv_training%convert_matTOtrm'>convert the .mat file to .trm</ulink>, and then <link linkend='ana_training%load_transformation'>load a transformation</link>.</para>
    <para><emphasis role='bold'>Note about SPM5</emphasis>: In this example, the 2 images contain information about the transformation to a common referential <emphasis>Talairach-MNI template-SPM</emphasis>. Be careful, this information is not in all images and the destination referential is not always the same. SPM5 for example, doesn't always set this normalized MNI template referential as the destination referential when it normalizes an image. In this case, Anatomist creates to different destination referential. To indicate that these referentials are equal, you can put an identity transformation between the 2 referentials: draw a line with the mouse between the 2 referentials while pressing Ctrl key.</para>
  </sect1>
  
  <sect1><title>Manual registration with the transformation control</title>
    <itemizedlist>
      <listitem><para>Load 
          <itemizedlist>
            <listitem>T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename> </listitem>
            <listitem>Activation map: <filename>&data_ana;subject01/Audio-Video_T_map.nii</filename></listitem>
          </itemizedlist>
        </para></listitem>
      <listitem><para>Put each volume into a window.</para></listitem>
      <listitem><para>Change the activation map <link linkend='ana_training%change_palette'>palette color</link>.</para></listitem>
      <listitem><para><link linkend='ana_training%make_fusion'>Make a fusion</link> between the 2 volumes.</para></listitem>
      <listitem><para>Right-click on the window of the functional volume and select <emphasis>View / Select object</emphasis>.</para></listitem>
      <listitem><para>Select the object in the browser.</para></listitem>
      <listitem><para>Click on &fb_control_transfo;.</para></listitem>
      <listitem><para>Now you can move the functional volume as you like, notice that the object also moves in the fusion window.</para>
        <itemizedlist>
          <listitem><para>A <link linkend='ana_training%zoom_trans_rotation'>translation</link> is done using <emphasis role='bold'>ctl + middle mouse button + mouse move</emphasis>.</para></listitem>
          <listitem><para>To do other operations like scaling and rotation, see the help on the control button tooltip.</para></listitem>
        </itemizedlist>
      </listitem>
      <listitem><para><emphasis>Settings =&gt; Referential window</emphasis>.</para></listitem>
      <listitem><para>An new transformation has been created. Right-click on the black line and select <emphasis>Save transformation</emphasis>.</para></listitem>
      <listitem><para>You will be able to <link linkend='ana_training%load_transformation'>reload this transformation</link> this transformation later or for instance read/use the information file to initiate a registration algorithm.</para></listitem>
    </itemizedlist>
    
    <para>NOTE: use this toolbox carefully because you <emphasis role='bold'>manually</emphasis> handle the registration. In fact the human eye cannot drive a registration as well as a specific algorithm. For example, a basic error is to align correctly in axial and do not check the alignment of the head outline in sagittal and coronal view. However this tool can be very interesting to initiate the translation parameters of an algorithm.</para>
  </sect1>
                        
  <sect1 id='ana_training%radio_neuro_aimsrc'><title>Radiological/neurological convention and usage of aimsrc configuration</title>
    <para>KEYWORDS: .aimsrc file, minf file.</para>
    <para>Before beginning, making a difference between the Anatomist display, how data are stored and how data are read:
    </para>
    <itemizedlist>
      <listitem><para><emphasis role='bold'>What does "the Anatomist display" mean</emphasis>: the display is independant of storing and reading data on your disk. You can display data in neurological convention even if they are stored and read like radiological data. It depends on settings (<emphasis>Settings -&gt; Preferences -&gt; Windows</emphasis>).</para></listitem>
      <listitem><para><emphasis role='bold'>How data is stored</emphasis>: this corresponds to the file organization. By using our tools (Aims Library), data is considered in radiological convention.</para></listitem>
      <listitem><para><emphasis role='bold'>How data is read</emphasis>: attributes contained in .aimsrs and .minf file can give additional information. For instance, the <emphasis>spm_radio_convention</emphasis> indicates that the data is in radiological convention if value is 1 otherwise SPM data will read in neurological convention.</para></listitem>
      <!-- <listitem><para>The display is independant of stocked data on your disk: you can display radiological data with a neurological convention. This depends on settings.</para></listitem> -->
      <!-- <listitem><para>The display depends both aimsrc and .minf file.</para></listitem>-->
      <!-- <listitem><para>The .minf file is read in first (spm_radio_convention and spm_normalized attributes), then the aimsrc file.</para></listitem>-->
      <!-- <listitem><para>If there is no .minf file, then only the aimsrc file is read.</para></listitem>-->
      <!--<listitem><para>Volumes are read in radiological convention and can be displayed with neuro or radio convention.</para></listitem>-->
      <!--<listitem><para>If there is a mismatch between the display and what you think, then check attributes in the .minf file.</para></listitem>-->
    </itemizedlist>	
    <para>So, in our tools two files can give information about reading data: .minf and the .aimsrc file. The .minf file have priority.
      To summarize, volumes are considered in radiological convention, then information from .minf and/or .aimsrc file are read and data is displayed according to Anatomist settings.
    </para>
    
    
    <para>Here we have many examples of configuration. Tests are run with an analyze data set with or without the .minf file. If you want to try them, then you must create the .minf file (&lt;name_data&gt;.img.minf) and the .aimsrc (if your user account doesn't have) with a text file editor. In order to try the configurations, you can use the following demonstration data, which can be found in the <filename>&data_ana;right_and_left</filename> directory. A correct display will be verified by visualization of the lesion located to right hemisphere. Note the following, first the data is stored in radiological convention and second the data is normalized with SPM2. In other words normalized data is in radiological convention, but <emphasis role='bold'>WARNING</emphasis> the output convention after normalisation depends on your SPM configuration. In our case, we considere that the input and output convention after SPM2 normalization are the same.</para> 
    
    <table><title>minf/aimsrc files</title>
      <tgroup align="justify" cols="3">
        <colspec colwidth='3.1in' colsep='1' rowsep='1'/>
        <colspec colwidth='1.83in' colsep='1' rowsep='1'/>
        <colspec colwidth='1.83in' colsep='1' rowsep='1'/>
        <thead>
          <row><entry>Configuration</entry>
            <entry>Normalized data and display with radiological convention</entry>
            <entry>No_Normalized data and display with radiological convention</entry>
          </row>
        </thead>      
        <tbody>
          <row>
            <entry>
              <para><emphasis role='bold'>.minf file:</emphasis> none</para>
              <para>	
                <emphasis role='bold'>.aimsrc file</emphasis>
                <screen>attributes = {
                  '__syntax__' : 'aims_settings',
                  'spm_input_radio_convention' : 1,
                  'spm_input_spm2_normalization' : 0,
                  'spm_output_radio_convention' : 1,
                  'spm_output_spm2_normalization' : 0,
                  }</screen></para>
            </entry>
            
            <entry>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;case_1_norm.png" format="PNG"  width="55"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_1_norm.png" format="PNG" width="70"/></imageobject>
              </mediaobject>
              <para>The display is not correct. <emphasis role='bold'>Why</emphasis>: data is normalized with SPM2 and the settings indicate the SPM99 mode use with spm_input_spm2_normalization = 0 (thus a flip on x axis is done).</para> 
            </entry>
            
            <entry>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;case_1_nonorm.png" format="PNG"  width="70"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_1_nonorm.png" format="PNG" width="85"/></imageobject>
              </mediaobject>
              <para>The display is correct.</para>
            </entry>
          </row>
          
          <row>
            <entry>
              <para><emphasis role='bold'>.minf file:</emphasis> none</para>
              <para><emphasis role='bold'>.aimsrc file</emphasis>
                <screen>attributes = {
                  '__syntax__' : 'aims_settings',
                  'spm_input_radio_convention' : 1,
                  'spm_input_spm2_normalization' : 1,
                  'spm_output_radio_convention' : 1,
                  'spm_output_spm2_normalization' : 1,
                  }</screen></para>
            </entry>
            
            <entry>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;case_2_norm.png" format="PNG"  width="55"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_2_norm.png" format="PNG" width="70"/></imageobject>
              </mediaobject>
              <para>The display is correct.</para>
            </entry>
            <entry>
              <mediaobject><imageobject role="fop">
                  <imagedata fileref="&DIR_IMG;case_2_nonorm.png" format="PNG"  width="70"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_2_nonorm.png" format="PNG" width="85"/></imageobject></mediaobject>
              <para>The display is correct.</para>
            </entry>
            
          </row>
          
          <row>
            <entry><para><emphasis role='bold'>.minf file (for each volume)</emphasis>
                <screen>attributes = {
                  'spm_spm2_normalization': 1
                  }</screen></para>
              <para><emphasis role='bold'>.aimsrc file</emphasis>
                <screen>attributes = {
                  '__syntax__' : 'aims_settings',
                  'spm_input_radio_convention' : 1,
                  'spm_input_spm2_normalization' : 0,
                  'spm_output_radio_convention' : 1,
                  'spm_output_spm2_normalization' : 0,
                  }</screen></para></entry>
            
            <entry>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;case_3_norm.png" format="PNG"  width="55"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_3_norm.png" format="PNG" width="70"/></imageobject>
              </mediaobject>
              <para>The display is correct. <emphasis role='bold'>But</emphasis>: information between the .minf and the .aimsrc are different. The correct information is contained in the .minf file, which is read in priority.</para>
            </entry>
            <entry>
              <mediaobject><imageobject role="fop"><imagedata fileref="&DIR_IMG;case_3_nonorm.png" format="PNG"  width="70"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_3_nonorm.png" format="PNG" width="85"/></imageobject></mediaobject>
              <para>The display is correct. <emphasis role='bold'>But</emphasis>: information contained in the .minf file is not adapted to the volume.</para>
            </entry>
          </row>
          
          <row>
            <entry><para><emphasis role='bold'>.minf file (for each volume)</emphasis>
                <screen>attributes = {
                  'spm_spm2_normalization': 0
                  }</screen></para>
              <para><emphasis role='bold'>.aimsrc file</emphasis>
                <screen>attributes = {
                  '__syntax__' : 'aims_settings',
                  'spm_input_radio_convention' : 1,
                  'spm_input_spm2_normalization' : 1,
                  'spm_output_radio_convention' : 1,
                  'spm_output_spm2_normalization' : 1,
                  }</screen></para></entry>
            
            <entry>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;case_4_norm.png" format="PNG"  width="55"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_4_norm.png" format="PNG" width="70"/></imageobject>
              </mediaobject>
              <para>The display is not correct. <emphasis role='bold'>Why</emphasis>: data is normalized with SPM2 and the settings indicate the SPM99 mode use with spm_spm2_normalization = 0 (thus a flip on x axis is done).</para> 
            </entry>
            <entry>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;case_4_nonorm.png" format="PNG"  width="70"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_4_nonorm.png" format="PNG" width="85"/></imageobject></mediaobject>
              <para>The display is correct. <emphasis role='bold'>But</emphasis>: information contained in the .minf file is not adapted to the volume.</para>
            </entry>
          </row>
          
          <row>
            <entry><para><emphasis role='bold'>.minf file (for each volume)</emphasis>
                <screen>attributes = {
                  'spm_radio_convention' : 1
                  }</screen></para>
              <para><emphasis role='bold'>.aimsrc file</emphasis>
                <screen>attributes = {
                  '__syntax__' : 'aims_settings',
                  'spm_input_radio_convention' : 1,
                  'spm_input_spm2_normalization' : 0,
                  'spm_output_radio_convention' : 1,
                  'spm_output_spm2_normalization' : 0,
                  }</screen></para></entry>
            
            <entry>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;case_5_norm.png" format="PNG"  width="55"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_5_norm.png" format="PNG" width="70"/></imageobject>
              </mediaobject>
              <para>The display is correct. <emphasis role='bold'>But</emphasis>: information contained in the .minf file is not adapted to the volume.</para>
            </entry>
            <entry>
              <mediaobject><imageobject role="fop"><imagedata fileref="&DIR_IMG;case_5_nonorm.png" format="PNG"  width="70"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;case_5_nonorm.png" format="PNG" width="85"/></imageobject></mediaobject>
              <para>The display is correct.</para>
            </entry>
          </row>
                
        </tbody></tgroup></table>	      
  </sect1>
  
</chapter>
                      
<chapter><title>Handling region of interest and sulci graphs</title>
            <sect1 id='ana_training%draw_roi'><title>Draw regions of interest (graph of ROIs)</title>
              <itemizedlist>
                <listitem><para>Load any volume.</para></listitem>
                <listitem><para>Place it into a window.</para></listitem>
                <listitem><para>Click on &fb_roi; of this window.</para></listitem>
                <listitem><para><emphasis>Session =&gt; New</emphasis>.</para></listitem>
                <listitem><para><emphasis>Region =&gt; New</emphasis> and provide a name.</para></listitem>
                <listitem><para>Change the brush: <emphasis>Paint =&gt; Disk</emphasis>, <emphasis>Bush Radius = 7</emphasis>.</para></listitem>
                <listitem><para>Draw your region on the window.</para></listitem>
                <listitem><para><emphasis>Session =&gt; Save As</emphasis>.</para></listitem>
                <listitem><para>Click <emphasis>Ok</emphasis>.</para></listitem>
              </itemizedlist>
            </sect1>

            <sect1 id="ana_training%view_roi"><title>Display a graph of ROI</title>
              <itemizedlist>
                <listitem><para>Load: <filename>&data_ana;roi/basal_ganglia.arg</filename> .</para></listitem>
                <listitem><para>Place the graph into a 3D window &window-3d-small;.</para></listitem>
                <listitem><para>An empty window is displayed. To view the object, select the nodes of the graph.</para></listitem>
                <listitem><para>Select <emphasis>view/select object</emphasis> menu by right-clicking on the 3D window. A browser with the graph is now diplayed.</para></listitem>
                <listitem><para>To display one or several nodes, unroll the graph and select them.</para></listitem>
              </itemizedlist>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_exo_roi-1.png" format="PNG"  width="250"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_exo_roi-1.png" format="PNG"/></imageobject>
              </mediaobject>
              <para>See <ulink url="#ana_training%view_roi_code">corresponding python script</ulink>.</para>
            </sect1>
            
            <sect1><title>Display a meshed graph of ROI</title>
              <itemizedlist>
                <listitem><para>Load: <filename>&data_ana;roi/mbasal_ganglia.arg</filename>.</para></listitem>
                <listitem><para>Place the graph into a 3D window &window-3d-small;.</para></listitem>
                <listitem><para><!-- Nothing is displayed because we must select the nodes of the graph.-->An empty window is displayed. To view the object, select the nodes of the graph.</para></listitem>
                <listitem><para>Select <emphasis>view/select object</emphasis> menu by right-clicking on the 3D window. A browser with the graph is now diplayed.</para></listitem>
                <listitem><para>To display one or several nodes, unroll the graph and select them.</para></listitem>
              </itemizedlist>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_exo_roi-2.png" format="PNG"  width="250"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_exo_roi-2.png" format="PNG"/></imageobject>
              </mediaobject>
            </sect1>
            
            <sect1><title>Change the name attribute of a graph node</title>
              <itemizedlist>
                <listitem><para>Load a sulci graph : <filename>&data_ana;subject01/sulci/Lsubject01_default_session_auto.arg</filename>.</para></listitem>
                <listitem><para>Place it into a &window-browser-small;.</para></listitem>
                <listitem><para>Select a node.</para></listitem>
                <listitem><para><emphasis>Right-click =&gt; Modify name</emphasis>.</para></listitem>
                <listitem><para>Enter a new value.</para></listitem>
                <listitem><para>Place your cursor on the graph object (to right) in Anatomist control window.</para></listitem>
                <listitem><para><emphasis>Right-click =&gt; File =&gt; Save</emphasis>.</para></listitem>
                <listitem><para>Provide a new name if you don't want to erase the original file.</para></listitem>
              </itemizedlist>
            </sect1>

            <sect1><title>Nomenclature and graph</title>
              <sect2><title>Load and use a nomenclature</title>
              <itemizedlist>
                <listitem><para>Load: <filename>&data_ana;roi/basal_ganglia.hie</filename> .</para></listitem>
                <listitem><para>Place the nomenclature into a browser &window-browser-small;.</para></listitem>
                <listitem><para>Load: <filename>&data_ana;roi/basal_ganglia.arg</filename> .</para></listitem>
                <listitem><para>Place the graph into a 3D window &window-3d-small;.</para></listitem>
                <listitem><para>Select <emphasis>central</emphasis>, <emphasis>hemisph_left</emphasis> <!-- and <emphasis>hemisph_right</emphasis>--> in the browser of the <filename>basal_ganglia.hie</filename>.</para></listitem>
                <listitem><para>Note that you can handle the ROIs by using the <emphasis>selection control</emphasis>  &fb_select; of the 3D window. Click on this control, and now select different parts of the graph.
                    <!-- To view the specific colors by clicking on <emphasis>selection control</emphasis>  &fb_select; of the 3D window and then click on any ROI.--></para></listitem>
              </itemizedlist>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;ana_training_exo_roi-3.png" format="PNG"  width="300"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;ana_training_exo_roi-3.png" format="PNG"/></imageobject>
              </mediaobject>
              <para>NOTE: if the specific colors are not displayed, see <emphasis>Settings =&gt; Graph parameters	=&gt; Colors 2D/3D</emphasis> 
                and activate/deactivate the <emphasis>Use nomenclature / Colors binding</emphasis> option.</para>
            </sect2>
            
            <sect2 id='ana_training%write_nomenclature' infoid='Write a nomenclature'><title>Write a simple nomenclature (.hie) </title>
              
              <para>KEYWORDS: .hie file.</para>
              
              <para>Here is the syntax for a nomenclature with 2 regions: region_A and region_B.</para>
              <screen>
                # tree 1.0
                
                *BEGIN TREE hierarchy
                graph_syntax RoiArg
                
                *BEGIN TREE fold_name
                name  region_A
                color 170 85 255
                
                *END
                
                *BEGIN TREE fold_name
                name  region_B
                color 255 170 0
                
                *END
                
                *END      
              </screen>
              
              <itemizedlist>
                <listitem><para>Copy those lines into a new text file. <!-- with an text editor such as wordpad under windows or nedit if you work with linux.--></para></listitem>
                <listitem><para>Save the file with the following name: <emphasis>my_nomenclature.hie</emphasis>. Under Windows, be careful with the file extension: Windows sometimes hides extensions or adds its own, so you may have to check or fix it.<!--Be aware that the file extension under Windows because 
                                                                    sometimes it is not display and the file can not used. In this case, you can try to rename it with the extension.--></para></listitem>
                <listitem><para>Open an Anatomist session.</para></listitem>
                <listitem><para>Open any volume.</para></listitem>
                <listitem><para>Draw a ROI graph with 2 regions. The names must be exactly region_A and region_B to link with the nomenclature.</para></listitem>
                <listitem><para>Load <emphasis>my_nomenclature.hie</emphasis> in your Anatomist session.</para></listitem>
                <listitem><para>Update the display by selecting and de-selecting of <emphasis>Use Nomenclature/colors bindings</emphasis>  in the <emphasis>Settings -gt; graph paremeters</emphasis> <!-- and check that <emphasis>Use attribute</emphasis> is set to <emphasis>name</emphasis> in <emphasis>Settings =&gt; Graph parameters</emphasis>. In fact, the <emphasis>name/label</emphasis> values can be a source of mistakes.--><!-- Label attribute is used in advanced level.--></para></listitem>
                <listitem><para>You can switch to the selection mode with &fb_select;.</para></listitem>
              </itemizedlist>
              
              <!--<figure><title>Two regions with a basic nomenclature</title>
                <mediaobject>
                  <imageobject role="fop"><imagedata fileref="&DIR_IMG;my_nomenclature.png" format="PNG"  width="100"/></imageobject>
                  <imageobject role="html"><imagedata fileref="&DIR_IMG;my_nomenclature.png" format="PNG"/></imageobject>
                </mediaobject>
              </figure>-->
              
    </sect2>
  </sect1>
  <sect1><title>Extraction and merging of sulci meshed (from sulci graph) and fusion between them</title>
    <para>This exercise shows how to extract a graph node mesh (ie sulcus or sulcus part), and merge or rather concatenate several such meshes. Note this example only works on graphs containing meshes.</para>
    
    <para><emphasis role="bold">EXTRACTION OF EACH MESH FROM A GRAPH</emphasis></para>
    <itemizedlist>
      <listitem><para>Put your sulci graph into a browser.</para></listitem>
      <listitem><para>Select a node and save its mesh by right-clicking on the mesh (aims_Tmtktri) in a browser and selecting <emphasis>Object-specific</emphasis> <emphasis>File</emphasis>=&gt;<emphasis>Save</emphasis>.</para></listitem>
      <listitem><para>specify an output file name as <emphasis>NameSulcus1.mesh</emphasis>.</para></listitem>	
    </itemizedlist>
    
    <para><emphasis role="bold">CONCATENATION OF ALL SAVED MESHES</emphasis></para>
    <itemizedlist>
      <listitem><para>Usage of the AimsZcat command line:</para>
        <screen>AimsZCat -i NameSuclcus1.mesh NameSuclcus2.mesh NameSuclcus3.mesh -o AllMesh.mesh</screen>This command has other options, but here we need:
        <itemizedlist>
          <listitem><para><emphasis>-i option</emphasis>: list of meshes to concatenate.</para></listitem>
          <listitem><para><emphasis>-o option</emphasis>: output filename for the concatenated mesh.</para></listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </sect1>

</chapter>

<chapter><title>Combining objects</title>
                        
  <sect1 id='ana_training%FusionSliceMethod' infoid='Fusion a volume with itself'><title> <inlinemediaobject> <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_slice_method_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_slice_method_little.png" format="PNG"  /></imageobject></inlinemediaobject> Fusion a volume with itself </title> 
    
    <para>KEYWORDS:  FusionSliceMethod.</para>	
    
    <itemizedlist>
      <listitem><para>Load a T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename></para></listitem>
      <listitem><para>Select the object in the Anatomist objects list.</para></listitem>
      <listitem><para>Click on &fusion; to create a <emphasis>Slice</emphasis> object.</para></listitem>
      <listitem><para>Select the <emphasis>Slice</emphasis> and O1 objects and drag them into a sagittal window.</para></listitem>
      <listitem><para>Rotate the objects to view the two planes (click on the middle button and move simultaneously on the mouse).</para></listitem>
      <listitem><para>To change the slice plane, activate it by right-click on the window and select <emphasis>view/select object</emphasis> menu. Then select the new control &control-cut; and use the keyboard shortcuts to move the plane (Ctrl key + middle mouse button for translation for example).</para></listitem>
    </itemizedlist>
    
    <figure><title>FusionSliceMethod: cut a volume across itself</title>
      <mediaobject><imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_slice_method2.png" format="PNG" 
                                                      width="200"/></imageobject>
        <imageobject role="html"><imagedata  fileref="&DIR_IMG;fusion_slice_method2.png" format="PNG"/></imageobject></mediaobject>
    </figure>	
    
  </sect1>

  <sect1 id='ana_training%fusion_whitemesh_map' infoid='Fusion between a cortical surface mesh and an activation map'><title>
      <inlinemediaobject><imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_map_whitemesh_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_map_whitemesh_little.png" format="PNG"/></imageobject></inlinemediaobject>
      Fusion between a cortical surface mesh and an activation map</title>
    
    <para>KEYWORDS:  Fusion3Dmethod.</para>
    
    <itemizedlist>
      <listitem><para>Load:
        <itemizedlist>
          <listitem>White matter mesh: <filename>&data_ana;subject01/subject01_Lwhite.mesh</filename></listitem>
          <listitem>Activation map: <filename>&data_ana;subject01/Audio-Video_T_map.nii</filename></listitem>
          <listitem>T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename></listitem>
        </itemizedlist>
      </para> 
      </listitem>
      <listitem><para>Change the <link linkend='ana_training%change_palette'>color palette</link> of the map.</para></listitem>
      <listitem><para><link linkend='ana_training%apply_builtin_ref'>Apply builtin referential (SPM/NIFTI)</link> for the map and the T1 MRI.</para></listitem>
      <listitem><para><link linkend='ana_training%load_existent_referential'>Apply the T1 MRI referential to the white matter mesh.</link>.</para>
        <figure><title>After loading referentials</title>
          <mediaobject>
            <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_map_whitemesh_3.png" format="PNG"  width="200"/></imageobject>
            <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_map_whitemesh_3.png" format="PNG" /></imageobject>
          </mediaobject>
        </figure>
      </listitem>
      <listitem><para>Make a fusion between the mesh and the map (click on &fusion;).</para></listitem>
      <listitem><para>Select the <emphasis>Fusion3DMethod</emphasis> and click <emphasis>OK</emphasis>. A new <emphasis>FUSION3D</emphasis> object is created.</para></listitem>
      <listitem><para>Place the <emphasis>FUSION3D</emphasis> object into a &window-3d-small;.</para></listitem>
      <listitem><para>Right-click on the <emphasis>FUSION3D</emphasis> object, then select <emphasis>Fusion =&gt; Control 3d fusion</emphasis>.</para></listitem>
      <listitem><para>Select <emphasis>Fusion mode =&gt; Linear</emphasis> and <emphasis>Rate = 50</emphasis>.</para></listitem>
    </itemizedlist>
    <figure><title>Fusion between a cortical surface mesh and an activation map</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_map_whitemesh_4.png" format="PNG"  width="200"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_map_whitemesh_4.png" format="PNG" /></imageobject>
      </mediaobject>
    </figure>
  </sect1>    

  <sect1 id='ana_training%fusion_iwhitemesh_map' infoid='Fusion between a mesh and an activation map'><title><inlinemediaobject> <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_map_iwhitemesh_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_map_iwhitemesh_little.png" format="PNG"  /></imageobject></inlinemediaobject> Fusion between an inflated cortical surface mesh and an activation map 
    </title>
    
    <para>KEYWORDS:  Fusion3Dmethod, FusionTexSurfMethod.</para>
    
    <itemizedlist>
      <listitem><para>Load</para> 
        <itemizedlist>
          <listitem>White matter mesh: <filename>&data_ana;subject01/subject01_Lwhite.mesh</filename></listitem>
          <listitem>Inflated white mesh: <filename>&data_ana;subject01/subject01_Lwhite_inflated.mesh</filename></listitem>
          <listitem>Activation map: <filename>&data_ana;subject01/Audio-Video_T_map.nii</filename></listitem>
          <listitem>T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename></listitem>
        </itemizedlist>
      </listitem>
      <listitem><para>Do a fusion between white matter mesh and the activation map as described in the <link linkend='ana_training%fusion_whitemesh_map'>previous section</link>. You now have a <emphasis>Fusion3D</emphasis> object.</para></listitem>
      <listitem><para><link linkend='ana_training%load_existent_referential'>Load the referential ot the T1 MRI to the inflated mesh</link>.</para></listitem>
      <listitem><para>Do a fusion between the <emphasis>Fusion3D</emphasis> object and the inflated white mesh. The mode will be <emphasis>FusionTexSurfMethod</emphasis>. You now have a <emphasis>TEXTURED SURF</emphasis> object.</para></listitem>
      <listitem><para>Place the <emphasis>TEXTURED SURF</emphasis> object into a &window-3d-small;.</para></listitem>
    </itemizedlist>
    
    <figure><title>Fusion between an inflated cortical surface mesh and an activation map.</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_map_iwhitemesh_1.png" format="PNG"  width="200"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_map_iwhitemesh_1.png" format="PNG"/></imageobject>
      </mediaobject>
    </figure>
    
    <para>NOTE: the step order is very important because if you directly do a fusion between the inflated mesh and the map, then the result will be 
      wrong. In fact the white mesh and the inflated mesh are two meshes sharing the same structure (number of vertices and polygons), only the location of vertices differ, so they can be assigned the same textures. But 3D fusions for mesh-map and inflated mesh-map do not produce the same result since in a 3D fusion, the 3D location of points is actually taken into account. 
      So you have to fusion first mesh and map to make an activation texture processing the correct points location, and then report this texture onto the inflated mesh in the second fusion (textured surface).
    </para>
    
  </sect1>    

  <sect1><title>Extract a texture</title>
    <itemizedlist>
      <listitem><para><link linkend='ana_training%fusion_whitemesh_map'>Do a fusion between a mesh and a volume</link>.</para></listitem>
      <listitem><para>Right-click on the FUSION3D object.</para></listitem>
      <listitem><para>Select <emphasis>File -&gt; Export texture</emphasis>.</para></listitem>
    </itemizedlist>
    
    <para>NOTE: this texture corresponds solely to meshes with the same structure.</para>
  </sect1>

  <sect1 id='ana_training%fusion_mesh_tex' infoid='Fusion between a mesh and texture'><title><inlinemediaobject> <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_mesh_tex_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_mesh_tex_little.png" format="PNG"  /></imageobject></inlinemediaobject> Fusion between an inflated cortical surface mesh and a texture</title>
    
    <para>KEYWORDS: FusionTexSurfMethod.</para>
    
    <itemizedlist>
      <listitem><para>Load</para> 
        <itemizedlist>
          <listitem>Inflated white mesh: <filename>&data_ana;subject01/subject01_Lwhite_inflated.mesh</filename> or <filename>subject01_Lwhite_inflated_4d.mesh</filename></listitem>
          <listitem>Cortical curvature texture: <filename>&data_ana;subject01/subject01_Lwhite_curv.tex</filename></listitem>
        </itemizedlist>
      </listitem>
      <listitem><para>Select the mesh and the texture to do a fusion (click on &fusion;).</para>
      </listitem>
      
      <listitem><para>Click on <emphasis>OK</emphasis>.</para></listitem>
      <listitem><para>Place the <emphasis>TEXTURED SURF</emphasis> object into a &window-3d-small;.</para></listitem>
    </itemizedlist>
    
    <figure><title>Fusion between an inflated cortical surface mesh and a texture</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_mesh_tex_2.png" format="PNG"  width="200"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_mesh_tex_2.png" format="PNG"/></imageobject>
      </mediaobject>
    </figure>
    
    <para>NOTE: <!-- you can do this kind of fusion because the mesh and the texture must have the same number of point -->this kind of fusion is only possible if the texture has been specifically made for the corresponding mesh: the number of vertices, and their order, must match.</para>
  </sect1>    

  <sect1 id='ana_training%fusion_multitexture'><title><inlinemediaobject> <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_multitexture_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_multitexture_little.png" format="PNG"  /></imageobject></inlinemediaobject> Multitexture : Inflated cortical surface mesh with an activation map and a curvature texture</title>
    
    <para>KEYWORDS: Fusion3DMethod, FusionTexSurfMethod and
      FusionMultiTextureMethod.</para>
    
    <itemizedlist>
      
      <listitem><para>Load</para> 
        <itemizedlist>
          <listitem>Left cortical mesh: <filename>&data_ana;subject01/subject01_Lwhite.mesh</filename></listitem>
          <listitem>Left inflated cortical mesh: <filename>&data_ana;subject01/subject01_Lwhite_inflated.mesh or subject01_Lwhite_inflated_4d.mesh</filename></listitem>
          <listitem>Activation map: <filename>&data_ana;subject01/Audio-Video_T_map.nii</filename></listitem>
          <listitem>T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename></listitem>
          <listitem>Mean curvature texture: <filename>&data_ana;subject01/subject01_Lwhite_curv.tex</filename></listitem>
        </itemizedlist>
      </listitem>
      
      <listitem><para><link linkend='ana_training%fusion_whitemesh_map'>Do a fusion between a cortical surface mesh and an activation map</link>.</para></listitem>
      <listitem><para>A <emphasis role='bold'>FUSION3D</emphasis> object is created, which should look like this:</para>
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_map_whitemesh_4.png" format="PNG"  width="200"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_map_whitemesh_4.png" format="PNG"/></imageobject>
        </mediaobject>
      </listitem>
      
      <listitem><para>Do a FusionMultiTextureMethod fusion between the FUSION3D and the texture. A Multitexture is created. This object cannot be visualized into a window.</para></listitem>
      
      <listitem><para>Do a FusionTexSurfMethod fusion between the Multitexture and the inflated mesh.</para></listitem>
            
            <listitem><para>Place the <emphasis role='bold'>TEXTURED SURF.</emphasis> object in a &window-3d-small;.</para></listitem>
            <listitem>
              <mediaobject>
                <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_multitexture_2.png" format="PNG"  width="200"/></imageobject>
                <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_multitexture_2.png" format="PNG" /></imageobject>
              </mediaobject>
            </listitem>
            
          </itemizedlist>
          
          <para>NOTE: in the snapshot above, we used the 4D objects.</para>

  </sect1>
  
  <sect1 id='ana_training%FusionCutMeshMethod_planar' infoid='Mesh cutting and planar'><title> <inlinemediaobject> <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_meshcutting_planar_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_meshcutting_planar_little.png" format="PNG"  /></imageobject></inlinemediaobject> Fusion Mesh cut by a plane </title> 
    
    <para>KEYWORDS:  FusionCutMeshMethod.</para>	
        
    <itemizedlist>
      <listitem><para>Load:
          <itemizedlist>
            <listitem>T1 MRI:<filename>&data_ana;subject01/subject01.nii</filename></listitem>
            <listitem>Right cortical mesh:<filename>&data_ana;subject01/subject01_Rwhite.mesh</filename></listitem>
          </itemizedlist>
        </para></listitem>
      <listitem><para>Select the 2 objects in the anatomist objects list.</para></listitem>
      <listitem><para>Click on &fusion; and select <emphasis>FusionCutMeshMethod</emphasis> to create a <emphasis>CutMesh</emphasis> object.</para></listitem>
      <listitem><para>Drag and drop the <emphasis>CutMesh</emphasis> object into a 3d window.</para>
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_cutmesh1.png" format="PNG"  width="100"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_cutmesh1.png" format="PNG"/></imageobject>
        </mediaobject>
      </listitem>
      <listitem><para>Rotate the <emphasis>CutMesh</emphasis> into the window by clicking on the middle button and move simultaneously on the mouse.</para>
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_cutmesh_planar2.png" format="PNG"  width="100"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_cutmesh_planar2.png" format="PNG"/></imageobject>
        </mediaobject>
      </listitem>
      <listitem><para>Unroll the <emphasis>CutMesh</emphasis> of the anatomist object list and drag and drop the <emphasis>BorderPloygon</emphasis> into the 3d window.</para>
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_cutmesh_planar3.png" format="PNG"  width="100"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_cutmesh_planar3.png" format="PNG"/></imageobject>
        </mediaobject>
      </listitem>
      <listitem><para>Drag and drop the <emphasis>subject01.nii</emphasis> into the 3d window.</para></listitem>
      <listitem><para>Activate the <emphasis>Mesh cutting</emphasis> control: </para>
        <itemizedlist>
          <listitem><para>Right-click on 3d window and select <emphasis>View / Select object</emphasis>.</para></listitem>
          <listitem><para>Activate the <emphasis>CutMesh</emphasis> object via this browser by selecting with the mouse (the line becomes blue).</para></listitem>
          <listitem><para>Click on &control-cut; of the 3d window.</para></listitem>
          <listitem><para>Move the cutting plane on the cut mesh as you like. Please refere to the <ulink url='#ana_man%d_ctr_meshcutting'><emphasis>mesh cutting</emphasis></ulink> control section of <emphasis>Manual of Anatomist</emphasis> to know the shortcuts.</para></listitem>
        </itemizedlist>
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_cutmesh_planar4.png" format="PNG"  width="150"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_cutmesh_planar4.png" format="PNG"/></imageobject>
        </mediaobject>
      </listitem>
    </itemizedlist>
    
  </sect1>
  
  <sect1>
    <title>
      <inlinemediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_cutmesh_small.png" format="PNG" width="30"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_cutmesh_small.png" format="PNG"  /></imageobject>
      </inlinemediaobject>
       Mesh cut by a fusion between an anatomical MRI and an activation map </title>
    
    <itemizedlist>
      <listitem>Load:
        <itemizedlist>
          <listitem>
            T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename>
          </listitem>
          <listitem>
            Activation map: <filename>&data_ana;subject01/Audio-Video_T_map.nii</filename>
          </listitem>
          <listitem>
            Head mesh: <filename>&data_ana;subject01/subject01_head.mesh</filename>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <link linkend="ana_training%apply_builtin_ref">Apply builtin referentials</link> for the 2 volumes.
      </listitem>
      <listitem>
        <link linkend="ana_training%load_existent_referential">Set the referential of the T1 MRI to the head mesh</link>.
      </listitem>
      <listitem>
        <link linkend="ana_training%FusionCutMeshMethod_planar">Make a fusion <emphasis>FusionCutMesh</emphasis></link> between the T1 MRI and the head mesh. A new object <emphasis>CutMesh</emphasis> is created.
      </listitem>
      <listitem>
        Put this object <emphasis>CutMesh</emphasis> in a 3D window.
      </listitem>
      <listitem>
        Select in this window the <emphasis>Cut Control</emphasis>: &control-cut;.
      </listitem>
      <listitem>
        Move the slice plane: <emphasis role="bold">Shift key + middle button + mouse move</emphasis> (rotation) and <emphasis role="bold">Ctrl Key + middle button + mouse move</emphasis>.(translation)
      </listitem>
      <listitem>
        Make a fusion between the T1 MRI and activation map. 
      </listitem>
      <listitem>
        Make a fusion <emphasis>CutMesh</emphasis> between this <emphasis>FUSION2D</emphasis> object et the head mesh and visualize the result.
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_cutmesh_1.png" format="PNG"  width="200"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_cutmesh_1.png" format="PNG" /></imageobject>
        </mediaobject>
      </listitem>
      <listitem>
        Make a fusion on the <emphasis>CutMesh</emphasis> object alone: it will be cut again by a second slice plane. It is possible to change the orientation of this second plane also.
        <mediaobject>
          <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_cutmesh_2.png" format="PNG"  width="200"/></imageobject>
          <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_cutmesh_2.png" format="PNG" /></imageobject>
        </mediaobject>
      </listitem>
      
    </itemizedlist>
    
</sect1>

  <sect1>
    <title>
      <inlinemediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_volrender_small.png" format="PNG" width="30"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_volrender_small.png" format="PNG"  /></imageobject>
      </inlinemediaobject>
      Volume Rendering
    </title>
    
    <para>The volume rendering feature enables to see the content of a volume in 3D by transparency. It is a way to have a look at the data without segmentation steps, but it can be difficult to choose the correct color palette and opacity.
    </para>
    <para><emphasis role="bold">Note:</emphasis> This feature uses a lot of graphical card power and a correct driver. So, it may not work or it may be slow on some computers.
    </para>
    
    <itemizedlist>
      <listitem>Load a T1 MRI: <filename>&data_ana;subject01/subject01.nii</filename>.
      </listitem>
      <listitem>Select the volume, click on &fusion; and choose VolumeRendering.
      </listitem>
      <listitem>Put the VolumeRendering object in a 3D window.
      </listitem>
      <listitem>In this window, open the menu <emphasis>Scene =&gt; Tools</emphasis>.
      </listitem>
      <listitem>Check <emphasis>Clipping plane =&gt; Single plane</emphasis>.
      </listitem>
      <listitem>Select the oblique view control &fb-oblique;
      </listitem>
      <listitem>Rotate the cut plane: <emphasis role="bold">Shift Key + middle button + mouse move</emphasis>.
      </listitem>
      <listitem>Modify the color palette, the bounds. You can also create a custom palette with the gradient palette editor.
      </listitem>
    </itemizedlist>
    <mediaobject>
      <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_volrender_1.png" format="PNG" width="150"/></imageobject>
      <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_volrender_1.png" format="PNG"  /></imageobject>
    </mediaobject>
    <para>There is another way cut a volume rendering object by a plane:
      <itemizedlist>
      <listitem>Select the volume rendering object and click on &fusion;</listitem>
      <listitem>Choose <emphasis>FusionClipMethod</emphasis>. It creates a <emphasis>Clipped object</emphasis>.</listitem>
      <listitem>Put the object in a 3D window. You can move the cut plane with the control &control-cut;.</listitem>
    </itemizedlist>
    </para>
  </sect1>

  <sect1 id='ana_training%FusionMSliceMethod' infoid='Fusion a volume across many planes'><title> <inlinemediaobject> <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_mslice_method_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_mslice_method_little.png" format="PNG"  /></imageobject></inlinemediaobject> Fusion a volume with itself across many planes </title> 
    
    <para>KEYWORDS:  FusionSliceMethod.</para>	
    
    <itemizedlist>
      <listitem><para>Load a volume: <filename>&data_ana;subject01/subject01.nii</filename></para></listitem>
      <listitem><para>Select the volume in the Anatomist objects list.</para></listitem>
      <listitem><para>Click on &fusion; to create a <emphasis>Slice</emphasis> object.</para></listitem>
      <listitem><para>Click on &fusion; to create a <emphasis>Slice (2)</emphasis> object.</para></listitem>
      <listitem><para>Select the <emphasis>Slice</emphasis>, the <emphasis>Slice (2)</emphasis> and the initial volume objects and drag them into a sagittal window.</para></listitem>
      <listitem><para>Rotate the objects to view the two planes (click on the middle button and move simultaneously on the mouse).</para></listitem>
      <listitem><para>To view the third plane, we handle the <emphasis>mesh cutting control</emphasis>. To activate/handle this control, select <emphasis>view/select</emphasis> object menu by right-clicking on the window. A browser with the objects list is now diplayed.</para></listitem>
      <listitem><para>Select <emphasis>Slice (2)</emphasis>.</para></listitem>
      <listitem><para>Active by clicking the <emphasis>mesh cutting control</emphasis> &control-cut;.</para></listitem>
      <listitem><para>Move the object with <emphasis role='bold'>Shift + mouse middle button</emphasis>. For more information about this control, place your mouse above the &control-cut; to read the help.</para></listitem>
    </itemizedlist>
    
    <figure><title>FusionSliceMethod: cut a volume across many planes</title>
      <mediaobject><imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_mslice_method.png" format="PNG" 
                                                      width="200"/></imageobject>
        <imageobject role="html"><imagedata  fileref="&DIR_IMG;fusion_mslice_method.png" format="PNG"/></imageobject></mediaobject>
    </figure>	
    
  </sect1>

  <sect1><title><inlinemediaobject> <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_several_cuttingplanes_little.png" format="PNG" width="30"/></imageobject><imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_several_cuttingplanes_little.png" format="PNG"  /></imageobject></inlinemediaobject> Handle several cutting planes</title>
    <itemizedlist>
      <listitem><para>Performe 2 <link linkend='ana_training%FusionCutMeshMethod_planar'>FusionCutMeshMethod with the usage of PlanarFusion3D</link>.</para></listitem>
      <listitem><para>Do a fusion between them and obtain a <emphasis>CutMesh(3) (available from 3.1.0 version)</emphasis>.</para></listitem>
      <listitem><para>Place each fusion in a 3d window.</para></listitem>
      <listitem><para>Set a different color for <emphasis>BorderPloygon</emphasis> of each fusion.</para></listitem>
      <listitem><para>Drag and drop each <emphasis>BorderPloygon</emphasis> in each fusion.</para></listitem>
      <listitem><para>Active the &control-cut; of each <emphasis>CutMesh</emphasis> fusion.</para></listitem>
      <listitem><para>Handle any <emphasis>CutMesh</emphasis> fusion and follow the cutting planes in 3d windows.</para></listitem>
    </itemizedlist>
    
    <figure><title>Handle several cutting planes</title>
      <mediaobject>
        <imageobject role="fop"><imagedata fileref="&DIR_IMG;fusion_several_cuttingplanes2.png" format="PNG"  width="200"/></imageobject>
        <imageobject role="html"><imagedata fileref="&DIR_IMG;fusion_several_cuttingplanes2.png" format="PNG"/></imageobject>
      </mediaobject>
    </figure>
    
  </sect1>
		                        
</chapter>

			
			
<chapter><title>Save Anatomist session</title>
  <para>It can be useful to save the current state of Anatomist (loaded objects, opened windows...) to reload it later without having to do again all actions.</para>
  <sect1><title>Save the session</title>
          <itemizedlist>
                  <listitem><para>After your working session, don't remove objects and windows.</para></listitem>
                  <listitem><para>Close the Anatomist session.</para></listitem>
                  <listitem><para>Windows: save the following file, <emphasis role='bold'>C:\Documents and Settings\&lt;user&gt;\.anatomist\history.ana</emphasis>.</para></listitem>
                  <listitem><para>Linux: save the following file, <emphasis role='bold'>/home/&lt;user&gt;/.anatomist/history.ana</emphasis>.</para></listitem>
          </itemizedlist>
  </sect1>
  
  <sect1><title>Reload the session</title>
          <para>Open the Anatomist session with the .ana file, like this:</para>
          <screen>anatomist my_history_file.ana</screen>
          <para>You can also load a .ana file from <emphasis>file  =&gt; open</emphasis> or <emphasis>Replay scenario</emphasis>.</para>
  </sect1>
</chapter>

<chapter id='ana_training%pyanatomist' infoid='Programming with Anatomist in Python language'>
  <title>Programming with Anatomist in Python language</title>
  <para>Anatomist is written in C++ language but has a also a python API: <emphasis role="bold">PyAnatomist</emphasis>. This python API enables to drive Anatomist application through python scripts : using Anatomist, loading volumes, meshes, graphs, viewing them in windows, merging objects, changing color palette, etc... It can be usefull in order to automate a repetitive visualization task or to add features to Anatomist application by developping a python plugin, which is much more easier than developping directly in Anatomist C++ library. Actually, several features in Anatomist have been added via a python plugin like the gradient palette for example. The python API is also used by several viewers in BrainVISA.
  </para>

 <sect1><title>Description of the API</title>
   <para>
  The main entry point is the <emphasis>Anatomist</emphasis> class which must be instantiated before any operation can be performed.
  It represents Anatomist application. This class contains a number of nested classes: AObject, AWindow... that represent the elements of Anatomist application.
</para>
<para>
  The entry point of this API is the module <emphasis>anatomist.api</emphasis>, you can import it as below :
  <screen>import anatomist.api as anatomist</screen>
</para>
  <para>
  And then create an instance of Anatomist : 
  <screen>a=anatomist.Anatomist()</screen>
</para>
<para>
  So you can send commands to Anatomist application, for example creating a window :
  <screen>window=a.createWindow('3D')</screen>
</para>
</sect1>

<sect1><title>Implementation</title>
  <para>
  Several means of driving Anatomist in python scripts exist :
  <itemizedlist>
    <listitem><emphasis role='bold'>Python bindings for the C++ library</emphasis> (SIP bindings). In this mode, all bound features are available. You handle directly the Anatomist objects. But Anatomist is loaded directly in your python program, it is not an independent program in this mode. So the errors that occur in Anatomist are reported in the python script.</listitem>
    <listitem><emphasis role='bold'>Sending commands via a network socket</emphasis>. Anatomist is run in server mode and listen for commands on the socket connection. In this mode, the available features are limited to what can be expressed with Anatomist commands system, so a limited set of features. A list of these commands can be found <ulink url="#anahelp_fr.prog.commands">here</ulink>. You can't handle directly the Anatomist objects, they are represented by a key. But Anatomist application runs in a separate process so potential errors in Anatomist don't crash the application that uses the API.</listitem>
  </itemizedlist>
  Behind a general interface, this api provides 2 implementations, one for each method of communication with Anatomist.
  </para>
  <para>
  The implementation that uses the python bindings is called <emphasis>direct</emphasis> implementation and is in the module <emphasis>anatomist.direct.api</emphasis>. The implementation that uses socket communication is called <emphasis>socket</emphasis> implementation and is in the module <emphasis>anatomist.socket.api</emphasis>. By default, the implementation used when you import <emphasis>anatomist.api</emphasis> is the <emphasis>direct</emphasis> implementation.
</para>
<para>
  Another specific implementation for Brainvisa also exists : <emphasis>brainvisa.anatomist</emphasis> module. It enables to use brainvisa database informations on loaded objects to automatically load associated referentials and transformations. 
  It uses the same api, so it is possible to switch from one implementation to the other.</para>
<para>
  By default, brainvisa module uses socket implementation. This way, Brainvisa and Anatomist applications run in separated processes. and potential errors in Anatomist does not crash Brainvisa.
</para>
<para>See the python documentation of the python Anatomist API : <ulink url="#sphinxpyanatomist%index">sphinx doc</ulink>.</para>
<para>More information about this API and examples available <ulink url="#cartointernet_pg%pyanatomist">here</ulink>.</para>
</sect1>
<sect1><title>Using the API</title>
  <para>
    In this part, we will go back to the previous examples of this tutorial and see how to do the same with a python script. The data for the examples in this section are the same : <ulink url="ftp://ftp.cea.fr/pub/dsv/anatomist/data/demo_data.zip">ftp://ftp.cea.fr/pub/dsv/anatomist/data/demo_data.zip</ulink>.
  </para>
  <para>To run the following examples, we will use an interactive python shell <emphasis>IPython</emphasis>. It is much more practical than the classic python shell because it offers usefull features like completion. This program is available in the BrainVISA package. To access it, first "source" the script  &lt;brainvisa_installation_directory&gt;/bin/cartopack.sh, which adds the programs in BrainVISA package to the available programs in the current shell. And then, run ipython with the option -q4thread, which runs a Qt event loop, needed for the graphical interface.
    <screen>source &lt;brainvisa_installation_directory&gt;/bin/cartopack.sh
ipython -q4thread
    </screen>
</para>
<sect2><title>Run Anatomist</title>
<para>
  First of all, we need to import anatomist API module. Then we can create an instance of Anatomist class.
  <screen>
import anatomist.api as ana

a=ana.Anatomist() 
  </screen>
</para>
</sect2>
<sect2 id="ana_training%load_object_code"><title>Load an object</title>
  <para>
    In this example, we will put the path to the <emphasis>data_for_anatomist</emphasis> directory in a variable named src. We will use this variable in all the next examples. We will also load a python module named <emphasis>os</emphasis> which has usefull functions to handle files and paths.
    <screen>
import os
src="&lt;path to data_for_anatomist directory&gt;"
# Load an object
t1mri=a.loadObject( os.path.join(src, "data_for_anatomist", "subject01", "subject01.nii") )
    </screen>
  </para>
  <para>See <ulink url="#ana_training%load_object">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>
<sect2 id="ana_training%view_object_code"><title>View an object</title>
  <para>
    We open an axial window and add the volume loaded in the previous example in this window.
    <screen>
# view an object
axial=a.createWindow("Axial")
axial.addObjects(t1mri)
    </screen>
  </para>
  <para>See <ulink url="#ana_training%view_object">the corresponding actions in the graphical interface</ulink>.</para>
  <para>When opening a new window, it is possible to change its initial position and size with the geometry parameter. This parameter is a list of 4 values (in pixels) : [x, y, width, height]. </para>
  <screen>
# customizing the position and size of a new window : the windows will be displayed at position (100, 150) with a size of (300, 300)
w=a.createWindow("Axial", geometry=[100,150, 300, 300 ])
  </screen>
</sect2>
<sect2><title>Windows block</title>
  <para>
    We create 4 views in the same windows block and add the image in each views.
    <screen>
# view an object in a 4 views block
block=a.createWindowsBlock(2) # 2 columns
w1=a.createWindow("Axial", block=block)
w2=a.createWindow("Sagittal", block=block)
w3=a.createWindow("Coronal", block=block)
w4=a.createWindow("3D", block=block)
t1mri.addInWindows( [w1, w2, w3, w4] )
    </screen>
  </para>
</sect2>
<sect2><title>Move the cursor</title>
  <para>
    <screen>
# show the cursor position
print "\nCursor at : ", a.linkCursorLastClickedPosition()
# move the linked cursor 
w1.moveLinkedCursor([150,100,60])
print "\nCursor at : ", a.linkCursorLastClickedPosition()
    </screen>
  </para>
</sect2>
<sect2 id="ana_training%zoom_trans_rotation_code"><title>Camera</title>
  <para>
    This method enables to change the camera parameters of a window. In this example, we change the zoom.
    <screen>
axial.camera(zoom=2) 
    </screen>
    You can also change the rotation of the view by changing the view_quaternion parameters. The rotation is represented by a quaternion which is a vector with 4 parameters. 
    As the interpretation of quaternions is not easy at first time, it is useful to look at the current value of the parameter in a window with the method getInfos().
    <screen>
axial.getInfos()
axial.camera(view_quaternion=[0.9, -0.2, -0.2, 0.3])
    </screen>
    It is possible to change the orientation of the slice plan with the parameter slice_quaternion.
    <screen>
axial.camera(slice_quaternion=[0.3, 0.3, 0, 0.9])
    </screen>
  </para>
  <para>See <ulink url="#ana_training%zoom_trans_rotation">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>
<sect2 id="ana_training%reader_header_code"><title>View header information</title>
  <para>
    <screen>
# view header
browser=a.createWindow("Browser")
browser.addObjects(t1mri)
    </screen>
  </para>
  <para>See <ulink url="#ana_training%reader_header">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>
<sect2 id="ana_training%change_palette_code"><title>Change the color palette</title>
  <para>
    <screen>
# color palette
palette=a.getPalette("Blue-Green-Red-Yellow")
t1mri.setPalette(palette)
    </screen>
  </para>
  <para>See <ulink url="#ana_training%change_palette">the corresponding actions in the graphical interface</ulink>.</para>
<sect3><title>Custom palette</title>
  <para>
    You can create a new palette by giving the list of RGB parameters of the palette colors.
    <screen>
# custom palette
customPalette=a.createPalette("customPalette")
colors=[]
for x in xrange(255):
  colors.extend([0, 0, x])
  
customPalette.setColors(colors=colors)
t1mri.setPalette(customPalette)
    </screen>
  </para>
</sect3>
</sect2>
<sect2 id="ana_training%view_meshes_code"><title>View meshes</title>
  <para>
    <screen>
# view meshes
lwhite=a.loadObject( os.path.join(src, "data_for_anatomist", "subject01", "subject01_Lwhite.mesh") )
rwhite=a.loadObject( os.path.join(src, "data_for_anatomist", "subject01", "subject01_Rwhite.mesh") )
w3d=a.createWindow("3D")
w3d.addObjects([lwhite, rwhite])
    </screen>
  </para>
  <para>See <ulink url="#ana_training%view_meshes">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>
<sect2 id="ana_training%superimpose_code"><title>Superimposing</title>
  <para>
    <screen>
# superimposing
a.addObjects(t1mri, w3d)
    </screen>
  </para>
  <para>See <ulink url="#ana_training%superimpose">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>
<sect2 id="ana_training%change_opacity_mesh_code"><title>Change mesh material</title>
  <para>
    <screen>
# mesh material
head=a.loadObject(os.path.join(src, "data_for_anatomist", "subject01", "subject01_head.mesh"))
head.addInWindows(w3d)
material=a.Material(diffuse=[0.8, 0.6, 0.6, 0.5])
head.setMaterial(material)
    </screen>
  </para>
  <para>See <ulink url="#ana_training%change_opacity_mesh">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>
<sect2 id="ana_training%make_fusion_code"><title>Fusion between 2 volumes</title>
  <para>
    <screen>
brain_mask=a.loadObject(os.path.join(src, "data_for_anatomist", "subject01", "brain_subject01.nii"))
brain_mask.setPalette(a.getPalette("GREEN-ufusion"))
t1mri.setPalette("B-W LINEAR")
# fusion 2D
fusion2d=a.fusionObjects([brain_mask, t1mri], "Fusion2DMethod")
axial=a.createWindow("Axial")
axial.addObjects(fusion2d)
# params of the fusion : linear on non null
a.execute("Fusion2DParams", object=fusion2d, mode="linear_on_defined", rate=0.4)
    </screen>
  </para>
  <para>It is possible to do different types of fusion using the same method <emphasis>fusionObjects</emphasis> and changing the list of objects and the type of fusion.</para>
  <para>See <ulink url="#ana_training%make_fusion">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>
<sect2 id="ana_training%load_transformation_code"><title>Load a transformation</title>
  <para>
    <screen>
t1mri_s2=a.loadObject( os.path.join(src, "data_for_anatomist", "subject02", "sujet02.ima") )
t1mri_s2.setPalette("Blue-White")
fusion2d=a.fusionObjects([t1mri, t1mri_s2], "Fusion2DMethod")
r1=a.createReferential()
r2=a.createReferential()
cr=a.centralRef
t1mri.assignReferential(r1)
t1mri_s2.assignReferential(r2)
# load a transformation
a.loadTransformation( os.path.join(src, "data_for_anatomist", "subject01", "RawT1-subject01_default_acquisition_TO_Talairach-ACPC.trm"), r1, cr)
a.loadTransformation( os.path.join(src, "data_for_anatomist", "subject02", "RawT1-sujet02_200810_TO_Talairach-ACPC.trm"), r2, cr)
axial=a.createWindow("Axial")
axial.addObjects(fusion2d)
    </screen>
  </para>
  <para>See <ulink url="#ana_training%load_transformation">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>
<sect2 id="ana_training%load_existent_referential_code"><title>Load an existing referential</title>
  <para>
    <screen>
lwhite.assignReferential(r1)
axial.addObjects(lwhite)
    </screen>
  </para>
  <para>See <ulink url="#ana_training%load_existent_referential">the corresponding actions in the graphical interface</ulink>.</para>

</sect2>
<sect2 id="ana_training%apply_builtin_ref_code"><title>Apply builtin referential (SPM/NIFTI)</title>
  <para>
    <screen>
map=a.loadObject( os.path.join(src, "data_for_anatomist", "subject01", "Audio-Video_T_map.nii" ) )
map.setPalette("tvalues100-200-100")
t1mri.applyBuiltinReferential()
map.applyBuiltinReferential()
fusion_map=a.fusionObjects([map, t1mri], "Fusion2DMethod")
axial=a.createWindow("Axial")
axial.addObjects(fusion_map)
a.execute("Fusion2DParams", object=fusion_map, mode="linear_on_defined", rate=0.5)
    </screen>
  </para>
  <para>See <ulink url="#ana_training%apply_builtin_ref">the corresponding actions in the graphical interface</ulink>.</para>

</sect2>

<sect2 id="ana_training%view_roi_code">
<title>Display a ROI graph</title>
<screen>
graph=a.loadObject( os.path.join(src, "data_for_anatomist", "roi", "basal_ganglia.arg") )
w = a.createWindow( '3D' )
w.addObjects( graph, add_graph_nodes=True )
</screen>
<para>See <ulink url="#ana_training%view_roi">the corresponding actions in the graphical interface</ulink>.</para>
</sect2>

<sect2 id="ana_training%execute_command">
  <title>Sending a command to Anatomist</title>
  <para>A lot of commands that can be processed by Anatomist are encapsulted in Anatomist class methods. But some commands, less commonly used are not available through specific methods. Nevertheless, they can be called through a generic method <emphasis>Anatomist.execute(&lt; command name &gt;, **parameters)</emphasis>.</para>
  <para>The list of available commands is listed in the following page : <ulink url="http://brainvisa.info/doc/anatomist/html/fr/programmation/commands.html">http://brainvisa.info/doc/anatomist/html/fr/programmation/commands.html</ulink>.</para>
  <para>In the previous examples, we use this method to call Fusion2DParams command which is not encapsulated in a specific method.</para>
  <screen>a.execute("Fusion2DParams", object=fusion_map, mode="linear_on_defined", rate=0.5)</screen>
</sect2>
</sect1>
</chapter>
<!--
    
A documenter
    
Visualiser l'activation de facon "saturee" par rapport au fond des sillons :_
1) placer le fichier joint (Blue.....) dans un dossier $HOME/.anatomist/rgb. Il s'agit d'une palette 2D pour texture 2D.
2) fusion entre la carte d'activation et le maillage de la matiere blanche (qqs chose comme Lwhite.mesh) = FUSION3D
3) extraire la texture de la FUSION3D comme un nouvel objet
4) fusion (FusionTextureMethod) entre la nouvelle texture et la texture du fond des sillons (qqs chose comme Lwhite_curv.tex) = TEXTURE
5) fusion entre TEXTURE et le maillage gonflé (qqs chose comme Lwhite_inflated.mesh) = TEXTURED SURF.
6) placer le TEXTURED SURF dans une fenetre 3D
7) modifier la palette de TEXURE en choisissant le fichier mis dans le dossier rgb (s'il n'apparait pas dans la liste des palettes, c'est que vous l'avez mal place ou essayer de relancer anatomist)
8) voila ce j'obtiens avec mes données cf : fond_sillon+act.jpg
9) vous pouvez jouer sur les bornes de la palette la '1st dimension setting' et egalement avec la '2nd dimension setting'
10) A vous de jouer !


 Selection d'1 point depuis des coordonnées :_
Je vous ai montre comment positionner un point (des coordonnées) par le menu  'scene -> Manually specify linked cursor position'.
Il faut bien comprendre que ces coordonnées font reference au curseur liée qui fait lui mm reference au referentiel de la fenetre. Petite subtlité au passage, le referentiel de la fenetre n'est pas forcement celui de l'objet qu'il contient. Cad que mon objet (mon image) peut etre dans un referentiel rouge et ma fenetre dans un referentiel jaune.  On peut modifier le referentiel de la fenetre en cliquant sur la barre de couleur situee sur la fenetre.
Donc si on veut chercher un point par rapport aux coordonnees SPM_Talairach, il faut etre capable de placer notre objet dans ce referentiel.
Si je prends l'exemple d'une anatomie (T1) traitee par brainvisa, je vous ai explique que nous pouvions recuperer une transfo qui va de la T1_TO_Talairach.trm.
Puis dans le pakage, il y a la transfo cartopack-stable/share/shfj-3.1/transformation/talairach_TO_spm_template_novoxels.trm.
Ce qu'il faut faire :
1) charger la T1(referential 1)
2) charger un nouveau referential pour identifier le (Aims)Talairach (referentiel 2)
3) charger T1_TO_Talairach.trm de referential 1 à referentiel 2
4) charger un nouveau referential pour identifier le (SPM)Talairach (referentiel 3)
5) charger talairach_TO_spm_template_novoxels.trm de referential 2 à referentiel 3
6)  charger la T1 dans une fenetre
7) modifier le referentiel de la fenetre en cliquant sur la barre de couleur situee sur la fenetre par exemple la couleur du referentiel 3
8) utiliser le menu  'scene -> Manually specify linked cursor position' pour rechercher par exemple 0 0 0
9) Vous pouvez utiliser dans les données de demos : data_for_anatomist/referential/ref_TO_talairach

    
-->
	
</book>
